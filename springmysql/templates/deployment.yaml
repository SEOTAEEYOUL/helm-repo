apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "springmysql.fullname" . }}
  labels:
    {{- include "springmysql.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "springmysql.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "springmysql.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.serviceAccount.create }}
      serviceAccountName: {{ include "springmysql.serviceAccountName" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}


      {{- if .Values.initContainer.enabled }}
      initContainers:
      - name: data-loading-init
        image: alpine/git # 이 이미지는 git 명령어를 지원합니다
        {{- if .Values.persistent.use }}
        volumeMounts:
        - name: persistent-storage
          mountPath: {{ .Values.persistent.mountPath }}
        {{- end }}
        {{- with .Values.initContainer.script }}
        command: [ "/bin/sh", "-c" ]
        args:
        - |
{{ . | indent 10 }}
        {{- end }}
        env:        
        - name: DATABASE
          value: {{ .Values.db.database }}
        - name: DB_DRIVER
          value: {{ .Values.db.driver }}
        - name: DB_CONNECTION
          value: {{ .Values.db.connection }}
        - name: DB_USERNAME
          value: {{ .Values.db.user }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.password }}
              key: password
      {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: REGION
            value: {{ .Values.aws.region }}
          - name: CLUSTER_NAME
            value: {{ .Values.aws.eks.clusterName }}
          - name: TITLE
            value: {{ include "springmysql.fullname" . }}
          - name: DB_DRIVER
            value: {{ .Values.db.driver }}
          - name: DB_CONNECTION
            value: {{ .Values.db.connection }}
          - name: DB_USERNAME
            value: {{ .Values.db.user }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.db.password }}
                key: password
          - name: DATABASESERVER_PORT
            value: "{{ .Values.db.port }}"
          - name: TZ
            value: {{ .Values.db.timezone }}
          {{- if .Values.persistent.use }}
          volumeMounts:
            - mountPath: {{ .Values.persistent.mountPath }} # /data
              name: persistent-storage
          {{- end }}
      {{- if .Values.persistent.use }}
      volumes:
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistent.pvc }} # efs-sc-pvc
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}



